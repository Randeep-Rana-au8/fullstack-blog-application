[{"C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\index.js":"1","C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\App.js":"2","C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\redux\\reducers\\userReducer.js":"3","C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\redux\\reducers\\blogReducer.js":"4","C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\redux\\store.js":"5","C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\redux\\actions\\allActions.js":"6","C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\components\\Navbar\\Navbar.jsx":"7","C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\components\\blog&category\\LatestBlog.jsx":"8","C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\components\\blog&category\\AllBlogs.jsx":"9"},{"size":356,"mtime":1611511398969,"results":"10","hashOfConfig":"11"},{"size":1215,"mtime":1611706047126,"results":"12","hashOfConfig":"11"},{"size":342,"mtime":1611511322675,"results":"13","hashOfConfig":"11"},{"size":447,"mtime":1611665842036,"results":"14","hashOfConfig":"11"},{"size":360,"mtime":1611511382085,"results":"15","hashOfConfig":"11"},{"size":303,"mtime":1611665179606,"results":"16","hashOfConfig":"11"},{"size":441,"mtime":1611656608220,"results":"17","hashOfConfig":"11"},{"size":300,"mtime":1611739251623,"results":"18","hashOfConfig":"11"},{"size":437,"mtime":1611727588329,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"albb9u",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\index.js",[],["40","41"],"C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\App.js",["42"],"import { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { add_blog, last_blog } from \"./redux/actions/allActions\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport LatestBlog from \"./components/blog&category/LatestBlog\";\r\nimport AllBlogs from \"./components/blog&category/AllBlogs\";\r\nimport \"./App.css\";\r\n\r\nfunction App({ state, add_blog, last_blog }) {\r\n  const { blogs, lastBlog } = state.blogsReducer;\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const result = await axios.get(\"https://myvicharbackend.herokuapp.com/api/posts\");\r\n      add_blog(result.data);\r\n      last_blog(result.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <section>\r\n        {blogs ? (\r\n          <div className=\"container\">\r\n            <LatestBlog data={lastBlog} />\r\n            <AllBlogs data={blogs} />\r\n          </div>\r\n        ) : (\r\n          \"Loading...\"\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    state: state,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { add_blog, last_blog })(App);\r\n","C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\redux\\reducers\\userReducer.js",[],"C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\redux\\reducers\\blogReducer.js",[],"C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\redux\\store.js",[],"C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\redux\\actions\\allActions.js",[],"C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\components\\Navbar\\Navbar.jsx",[],"C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\components\\blog&category\\LatestBlog.jsx",["43"],"C:\\Users\\Ranaji\\Desktop\\github-repos\\fullstack-blog-application\\frontend\\src\\components\\blog&category\\AllBlogs.jsx",["44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":19,"column":6,"nodeType":"51","endLine":19,"endColumn":8,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":6,"column":7,"nodeType":"55","endLine":6,"endColumn":73},{"ruleId":"56","severity":1,"message":"57","line":12,"column":13,"nodeType":"55","endLine":12,"endColumn":55},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'add_blog' and 'last_blog'. Either include them or remove the dependency array. If 'add_blog' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["60"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [add_blog, last_blog]",{"range":"63","text":"64"},[705,707],"[add_blog, last_blog]"]